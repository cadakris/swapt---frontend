[{"/Users/krisc/Swapt_Project/frontend_swap_project/src/index.js":"1","/Users/krisc/Swapt_Project/frontend_swap_project/src/reportWebVitals.js":"2","/Users/krisc/Swapt_Project/frontend_swap_project/src/App.js":"3","/Users/krisc/Swapt_Project/frontend_swap_project/src/useritempage/UserItemPage.js":"4","/Users/krisc/Swapt_Project/frontend_swap_project/src/home/Home.js":"5","/Users/krisc/Swapt_Project/frontend_swap_project/src/requestpage/RequestPage.js":"6","/Users/krisc/Swapt_Project/frontend_swap_project/src/form/Form.js":"7","/Users/krisc/Swapt_Project/frontend_swap_project/src/userprofilemodal/UserProfileModal.js":"8","/Users/krisc/Swapt_Project/frontend_swap_project/src/useritems/UserItems.js":"9","/Users/krisc/Swapt_Project/frontend_swap_project/src/tradeimages/TradeImages.js":"10","/Users/krisc/Swapt_Project/frontend_swap_project/src/itemscontainer/ItemsContainer.js":"11","/Users/krisc/Swapt_Project/frontend_swap_project/src/modal/Modal.js":"12","/Users/krisc/Swapt_Project/frontend_swap_project/src/item/Item.js":"13","/Users/krisc/Swapt_Project/frontend_swap_project/src/edititemmodal/EditItemModal.js":"14"},{"size":537,"mtime":1651287187239,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1650677158348,"results":"17","hashOfConfig":"16"},{"size":4434,"mtime":1656566188878,"results":"18","hashOfConfig":"16"},{"size":2351,"mtime":1656566187163,"results":"19","hashOfConfig":"16"},{"size":1171,"mtime":1656215509320,"results":"20","hashOfConfig":"16"},{"size":4426,"mtime":1656524415070,"results":"21","hashOfConfig":"16"},{"size":3659,"mtime":1656553647302,"results":"22","hashOfConfig":"16"},{"size":3418,"mtime":1656301953920,"results":"23","hashOfConfig":"16"},{"size":1471,"mtime":1656566644438,"results":"24","hashOfConfig":"16"},{"size":534,"mtime":1650713232399,"results":"25","hashOfConfig":"16"},{"size":758,"mtime":1655936131898,"results":"26","hashOfConfig":"16"},{"size":1403,"mtime":1656566486884,"results":"27","hashOfConfig":"16"},{"size":406,"mtime":1651287312125,"results":"28","hashOfConfig":"16"},{"size":2944,"mtime":1656566741630,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"19k80lz",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"41"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"41"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"33"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"33"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"33"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"33"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/krisc/Swapt_Project/frontend_swap_project/src/index.js",[],[],[],"/Users/krisc/Swapt_Project/frontend_swap_project/src/reportWebVitals.js",[],[],"/Users/krisc/Swapt_Project/frontend_swap_project/src/App.js",["81","82","83"],[],"import React, {useEffect, useState} from 'react';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\"\nimport Home from './home/Home'\nimport RequestPage from './requestpage/RequestPage';\nimport UserItemPage from './useritempage/UserItemPage';\nimport { toast} from 'react-toastify';\nimport './App.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useNavigate } from \"react-router-dom\";\n\nfunction App() {\n  const [userItems, setUserItems] = useState({}) //grabbing the users, then grabbing the items\n  const [showClickedItem, setShowClickedItem] = useState({})\n  const [items, setItems] = useState([]) // displaying all items\n  const [cart, setCart] = useState('')\n  const [spin, setSpin] = useState('')\n  const [money, setMoney] = useState(0)\n  const [showEditForm, setShowEditForm] = useState(true)\n  const [editUsersItem, setEditUsersItem] = useState({}) //This is for editimg a user's item\n  const [showEditItemForm, setShowEditItemForm] = useState(true)\n  const [itemClickedToEdit, setItemClickedToEdit] = useState({})\n\n  useEffect(() => {\n    fetch('http://localhost:9292/excludeuserloggedinitems')\n        .then(res => res.json())\n        .then(itemData => {\n          setItems(itemData)\n          })\n}, [])\n\n  useEffect(() => {  \n    fetch('http://localhost:9292/userincludeitems')\n      .then(res => res.json())\n      .then(data => setUserItems(data))\n},[])\n\nconst savedNotify =() => toast.dark(`You successfully swap't your item. You owe $${money}`)\n\n//This function handles the actual trade when clicked\nfunction handleRequest (item1, item2) {\n  fetch(`http://localhost:9292/item/swap/${item1.id}/${item2.id}`, {\n    method: \"PATCH\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    }\n  })\n .then(resp => resp.json())\n .then(() => {\n  // console.log(userItems.items)\n  // let itemsTarget = userItems.items\n  setItems(items.filter(item => item.id !== item1.id))\n})\n.then (() => {\n  fetch('http://localhost:9292/userincludeitems')\n  .then(res => res.json())\n  .then(data => setUserItems(data))\n})\n// setUserItems(userItems.filter(item => item.id !== item1.id))\n//  .then(() => {\n//   setItems(items.filter(item => {\n//     if(item.id === item1.id) {\n//       return {...item, user_id: item2.user_id}\n//     }\n//   }))\n// .then(() => {\n//   setItems(items.filter(item => item.id !== item2.id))\n// })\n// .then(() => {\n//   setUserItems({...userItems, items: userItems.items.map( item => {\n//     if(item.id !== item1.id) {\n//       return item2\n//     }\n//     else {\n//       return item\n//     }\n//   })\n// })\n// })\n//changed this part\n\n//   setUserItems({...userItems, items: userItems.items.map( item => {\n//     if(item.id === item1.id) {\n//       return item2\n//     }\n//     else {\n//       return item\n//     }\n//   })\n// })\n// })\nsavedNotify()\n}\n\n//Delete item\n  function deleteItem(deletedItem) {\n    fetch(`http://localhost:9292/itemdelete/${deletedItem.id}`, {\n      method: \"DELETE\",\n    })\n      setUserItems({...userItems, items: userItems.items.filter(item => item.id !== deletedItem.id)})\n  }\n\n  //This edits the item when clicked\n\n  return (\n    <>\n    <div className=\"logocontainer\">\n    <h1 className=\"mainHeader\"> <img className=\"logoimage\" src=\"https://images.squarespace-cdn.com/content/v1/5671782205f8e269f6f413a3/1629143864755-FN7KTQ3NG3YPCM11PQB7/Font+%281%29.png?format=300w\"></img>SWAP'T</h1>\n    </div>\n\n    <Router>\n    <Routes>\n      <Route exact path='/' element={<Home showClickedItem={showClickedItem} setShowClickedItem={setShowClickedItem} items={items}/>}/>\n      <Route path=\"/request\" element={<RequestPage spin={spin} setSpin={setSpin} setMoney={setMoney} handleRequest={handleRequest} cart={cart} setCart={setCart} userItems={userItems} showClickedItem={showClickedItem} setShowClickedItem={setShowClickedItem}/>}/>\n      <Route path =\"/useritempage\" \n        element={<UserItemPage \n        userItems={userItems} \n        setUserItems={setUserItems} \n        deleteItem={deleteItem} \n        items={items} \n        setItems={setItems} \n        setShowEditForm={setShowEditForm} \n        showEditForm={showEditForm} \n        setEditUsersItem={setEditUsersItem}\n        setShowEditItemForm={setShowEditItemForm}\n        showEditItemForm={showEditItemForm}\n        setItemClickedToEdit={setItemClickedToEdit}\n        itemClickedToEdit={itemClickedToEdit}\n        />}\n        />\n    </Routes>\n    </Router>\n\n    </>\n  )\n}\nexport default App;\n\n  ",[],"/Users/krisc/Swapt_Project/frontend_swap_project/src/useritempage/UserItemPage.js",[],[],"/Users/krisc/Swapt_Project/frontend_swap_project/src/home/Home.js",[],[],"/Users/krisc/Swapt_Project/frontend_swap_project/src/requestpage/RequestPage.js",["84","85"],[],"import React, { useState, useEffect } from 'react'\nimport { useNavigate } from \"react-router-dom\";\nimport './RequestPage.css'\nimport { ToastContainer,toast} from 'react-toastify';\nimport TradeImages from '../tradeimages/TradeImages'\nimport 'react-toastify/dist/ReactToastify.css'\n\n\nfunction RequestPage({ userItems, showClickedItem, setCart, cart, handleRequest, setMoney, setSpin, spin, toggleTradeItem}) {\n\n    const [userInfo, setUserInfo] = useState({})\n    const { bio, full_name, location, items, image } = userItems\n    let navigate = useNavigate()\n\n    //This is grabbing the information of the user we are trying to swap with\n    useEffect(() => {\n        fetch(`http://localhost:9292/users/${showClickedItem.user_id}`)\n            .then(res => res.json())\n            .then(userData => setUserInfo(userData))\n    }, [])\n\n    //This is mapping over the items and getting the user's item\n    const mappedItems = items.map(item => {\n        return <TradeImages\n            key={item.id}\n            item={item}\n            setCart={setCart}\n            setSpin={setSpin}\n        />\n    })\n\n    return (\n        <>\n            <div className='home-button-container'>\n            <button className='home-button' onClick={() => navigate(\"/\")}> HOME </button>\n            </div>\n\n            <div className='product-card-container'>\n                < div className = 'details' >\n                    <h1 className='item-name'>{showClickedItem.item_name}</h1>\n                    <p>Condition: {showClickedItem.condition}/10</p>\n                    <p>Description: {showClickedItem.description}</p>\n                </div>\n                <div className='image-container'>\n                    <p className='price'>Original Price: ${showClickedItem.original_pricing}</p>\n                    <img className=\"selected-item\" src={showClickedItem.image_url} alt='#{showClickedItem.item_name}' />\n                </div> \n            </div>\n\n            <div className='card-container'>\n                <div className=\"user-card-container\">\n                    <div className='card-user-info-1'>\n                        <h3>SWAP WITH </h3>\n                        <h3>{userInfo.full_name}</h3>\n                        <img className=\"userRequestPageImage\" src={userInfo.image} alt='Item' />\n                        <h3 className='title'>{userInfo.full_name}</h3>\n                        <p>{userInfo.location}</p>\n                        <p>Bio: {userInfo.bio}</p>\n                    </div>\n                </div>\n\n                    <div className='cart-section'>\n                        <h3>Select Item Below</h3>\n                        <img className='traded-item' src={showClickedItem.image_url} alt='Item' />\n                        {spin ? <img className='traded-item' src={spin} alt='spinner' /> : null}\n                        {cart.id ? <img class='traded-item' src={cart.image_url} alt='' /> : null}\n                        <div className='swap'>\n                            <p>If you wish to offer $ on top of the swap, enter here</p>\n                            <label>$\n                                <input onChange={(e) => setMoney(e.target.value)}></input>\n                            </label>\n                            <h3>Press REQUEST SWAP to offer {userInfo.full_name} a swap</h3>\n                            <button onClick={() => handleRequest(showClickedItem, cart)} className='request-bton'>REQUEST SWAP</button>\n                        </div>\n                    </div> \n\n\n                <div className=\"user-card-container\">\n                    <div className='card-user-info-2'>\n                        <h3>Your Profile</h3> \n                        <h3>{full_name}</h3>\n                        <div className=\"userImageContainer\">\n                            <img className=\"userRequestPageImage\" src={image} alt=\"animjage\" />\n                        </div>\n                        <h3 className='title'>{full_name}</h3>\n                        <p>{location}</p>\n                        <p>Bio: {bio}</p>\n                    </div>\n                </div>\n            </div>\n\n            <h1 className=\"userItemHeader\">Choose An Item To Swap</h1>\n\n            <div className=\"userItemsContainer\">\n                {mappedItems}\n                <ToastContainer autoClose={1500} position=\"top-center\" toastClassName=\"modifiedToast\" />\n            </div>\n        </>\n    )\n}\n\nexport default RequestPage;","/Users/krisc/Swapt_Project/frontend_swap_project/src/form/Form.js",["86"],[],"import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\nimport './Form.css'\n\nfunction Form({addItem, setUserItems, userItems}){\n    const [formState, setFormState] = useState({\n        item_name: '',\n        description: '',\n        original_pricing: 0,\n        condition: 0,\n        user_id: 5\n    }) \n\n    function handleSubmit(e){\n        e.preventDefault()\n        fetch('http://localhost:9292/itemsubmit', {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": 'application/json',\n            },\n            body: JSON.stringify({\n                    item_name: formState.item_name,\n                    description: formState.description,\n                    original_pricing: formState.original_pricing,\n                    condition: formState.condition,\n                    image_url: formState.image_url,\n                    user_id: formState.user_id\n            })\n        })\n        .then(res => res.json())\n        .then(newestItem => {\n            console.log(newestItem)\n            console.log(\"useritems\", userItems)\n            setUserItems({...userItems, items: [...userItems.items, newestItem]}) \n            // setUserItems(newestItem)\n        })\n        .then(() => {\n            fetch('http://localhost:9292/userincludeitems')\n            .then((res) => res.json())\n            .then((newItem => {\n                 console.log(newItem)\n                setUserItems(newItem)}))\n            \n        })\n    }\n\n\n    // .then((res) => res.json())\n    // .then((data) => console.log(data))\n    // .then(() => {\n    //    fetch(`/users/${user.id}/days`)\n    //   .then((res) => res.json())\n    //   .then((completeDuplicateInfo) => {\n    //     setColumnDays(completeDuplicateInfo)})\n    // })\n    // onDuplicateClick()\n    // })\n\nfunction handleChange(e){\n    setFormState({...formState, [e.target.name]: e.target.value})\n}\n\nreturn (\n    <>\n    <h2 className=\"newItemTitle\">Add New Item You Want to Swap</h2>\n        <div className='new-item-form'>\n            <form onSubmit={handleSubmit}>\n            <div>\n                <label className=\"label-form\">Item:\n                    <br />\n                     <input className=\"input-Box\" name=\"item_name\" value={formState.item_name} onChange={handleChange}></input>   \n                </label>\n            </div>\n\n            <div>\n                <label className=\"label-form\">Description\n                    <br />\n                    <input className=\"input-Box\" name=\"description\" value={formState.description} onChange={handleChange}></input>\n                </label>\n            </div>\n\n            <div>\n                <label className=\"label-form\">Original Pricing: \n                    <br />\n                    <input className=\"input-Box\" name=\"original_pricing\" value={formState.original_pricing} onChange={handleChange}></input>\n                </label>\n            </div>\n\n\n            <div>       \n                <label className=\"label-form\">Condition: \n                    <br />\n                    <input className=\"input-Box\" name=\"condition\" value={formState.condition} onChange={handleChange}></input>\n                </label>\n            </div>\n\n            <div>\n                <label className=\"label-form\">Image URL: \n                    <br />\n                <input className=\"input-Box\" name=\"image_url\" value={formState.image_url} onChange={handleChange}></input>\n                </label>\n            </div>\n\n        <div>\n            <input className=\"submitButton\" type=\"submit\" value=\"Submit\"></input>\n        </div>\n\n        </form>\n        </div> \n        </>\n    )\n}\n\nexport default Form;\n\n\n\n","/Users/krisc/Swapt_Project/frontend_swap_project/src/userprofilemodal/UserProfileModal.js",["87"],[],"import React, { useState } from 'react'\nimport { useNavigate } from \"react-router-dom\";\nimport './UserProfileModal.css'\n\nfunction UserProfileModal({userItems, setUserItems, handleCloseModal, updateUserInfo}) { \n\n  const {bio, full_name, location, items, image} = userItems\n\n  const [formState, setFormState]=useState({\n    full_name: `${full_name}`,\n    location: `${location}`,\n    bio: `${bio}`,\n    image: `${image}`,\n    items: `${items}`\n  })  \n\n  //This function is setting state and adding in the user input values\n  const handleProfileChange = (e) => {\n    setFormState({...formState, [e.target.name]:e.target.value})\n  }\n  \n\n  const editUserProfile = (e) => {\n    e.preventDefault()\n    fetch(`http://localhost:9292/edituserprofile/${userItems.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        full_name: formState.full_name,\n        location: formState.location,\n        bio: formState.bio, \n        image: formState.image,\n        items:`${items}`\n      })\n    })\n    .then(response => response.json())\n    .then(updatedUserInfo => {\n      console.log(\"setuseritems\", setUserItems)\n      // setUserItems({...userItems, updatedUserInfo})\n      setFormState(updatedUserInfo)\n    })\n    .then(() => {\n      // console.log(updatedUserInfo)\n      fetch('http://localhost:9292/userincludeitems')\n      .then((res) => res.json())\n      .then((newUserInfo) => setUserItems(newUserInfo))\n    })\n    handleCloseModal()\n    }\n\n  return (\n      <>\n      <div className='modal'> \n        <form onSubmit={editUserProfile}className=\"editProfileForm\">\n            <label>Name:\n            <br />\n            <input \n              className=\"user-info-input-box\" \n              type=\"text\" \n              name=\"full_name\" \n              placeholder={userItems.full_name}\n              value={formState.full_name} \n              onChange={handleProfileChange}\n              input/>\n            </label>\n            <br />\n\n            <label>Bio:\n            <br />\n            <input \n              className=\"user-info-input-box\" \n              type=\"text\" \n              name=\"bio\" \n              placeholder={userItems.bio}\n              value={formState.bio} \n              onChange={handleProfileChange}/>\n            </label>\n            <br />\n\n            <label>Location:\n            <br />\n            <input \n              className=\"user-info-input-box\" \n              type=\"text\" \n              name=\"location\" \n              placeholder={userItems.location}\n              value={formState.location} \n              onChange={handleProfileChange}/>\n            </label>\n            <br />\n\n            <label>Image:\n            <br />\n            <input \n              className=\"user-info-input-box\" \n              type=\"text\" \n              name=\"image\" \n              placeholder=\"Upload New Image\"\n              value={formState.image} \n              onChange={handleProfileChange}/>\n            </label>\n            <br />\n\n            <input\n                className=\"profileformbutton\"\n                type=\"submit\"\n                name=\"submit\"\n                value=\"Submit Changes\"\n                onClick={handleCloseModal}\n            />\n\n            <button className=\"profileformbutton\" onClick={handleCloseModal}>Cancel</button>\n\n        </form>\n      </div>\n      </>\n\n  )\n}\n\nexport default UserProfileModal","/Users/krisc/Swapt_Project/frontend_swap_project/src/useritems/UserItems.js",[],[],"/Users/krisc/Swapt_Project/frontend_swap_project/src/tradeimages/TradeImages.js",["88"],[],"import React, {useState} from \"react\";\nimport './TradeImages.css'\n\nfunction TradeImages({item, setCart, setSpin}) {\n    function handleClick(){\n        setCart(item)\n        setSpin('https://media2.giphy.com/media/OlYhrN7KKv7JIekBPd/giphy.gif?cid=790b7611f9eb79aee3c3ba922435f5d07a6fb987f5d03128&rid=giphy.gif&ct=s')   \n    }\n\nreturn (\n    <>\n        <div className=\"imageCardContainer\">\n            <img className=\"test\" src={item.image_url} alt=\"idk\" onClick={handleClick}/>\n        </div> \n    </> \n\n)}\n\nexport default TradeImages;","/Users/krisc/Swapt_Project/frontend_swap_project/src/itemscontainer/ItemsContainer.js",["89"],[],"import React, { useEffect } from 'react';\nimport Item from '../item/Item';\nimport Modal from '../modal/Modal';\nimport './ItemsContainer.css'\n\nfunction ItemsContainer({items, setShowClickedItem, showClickedItem, setToggleNewInfo}) {\n\n  function closeModal() {\n    setShowClickedItem({})\n  }\n\n  useEffect(() => {\n    closeModal()\n  },[])\n\n  return (\n    <div >\n      <div className=\"itemContainer\"> {items.map(item => {\n        return <Item \n          key={item.id}\n          item={item}\n          setShowClickedItem={setShowClickedItem}\n        />})}\n      </div>\n      { \n      showClickedItem.id? <Modal closeModal={closeModal} item={showClickedItem} setToggleNewInfo={setToggleNewInfo}/>\n      : null\n      }\n    </div>\n  )\n}\n\nexport default ItemsContainer","/Users/krisc/Swapt_Project/frontend_swap_project/src/modal/Modal.js",[],[],"/Users/krisc/Swapt_Project/frontend_swap_project/src/item/Item.js",["90","91","92"],[],"import React from 'react'\nimport './Item.css'\n\nfunction Item({item, setShowClickedItem}) {\n\n  const {item_name, description, original_pricing, condition, image_url} = item\n  \n  function displayDetails () {\n    setShowClickedItem(item)\n  }\n  \n  return (\n    <div className=\"itemCard\">\n      <img src={image_url} alt={`item of ${item_name}`} onClick={displayDetails}/>\n    </div> \n  );\n}\n\nexport default Item","/Users/krisc/Swapt_Project/frontend_swap_project/src/edititemmodal/EditItemModal.js",[],[],{"ruleId":"93","severity":1,"message":"94","line":9,"column":10,"nodeType":"95","messageId":"96","endLine":9,"endColumn":21},{"ruleId":"93","severity":1,"message":"97","line":19,"column":10,"nodeType":"95","messageId":"96","endLine":19,"endColumn":23},{"ruleId":"98","severity":1,"message":"99","line":107,"column":33,"nodeType":"100","endLine":107,"endColumn":201},{"ruleId":"93","severity":1,"message":"101","line":4,"column":25,"nodeType":"95","messageId":"96","endLine":4,"endColumn":30},{"ruleId":"102","severity":1,"message":"103","line":20,"column":8,"nodeType":"104","endLine":20,"endColumn":10,"suggestions":"105"},{"ruleId":"93","severity":1,"message":"106","line":2,"column":10,"nodeType":"95","messageId":"96","endLine":2,"endColumn":18},{"ruleId":"93","severity":1,"message":"94","line":2,"column":10,"nodeType":"95","messageId":"96","endLine":2,"endColumn":21},{"ruleId":"93","severity":1,"message":"107","line":1,"column":16,"nodeType":"95","messageId":"96","endLine":1,"endColumn":24},{"ruleId":"102","severity":1,"message":"108","line":14,"column":5,"nodeType":"104","endLine":14,"endColumn":7,"suggestions":"109"},{"ruleId":"93","severity":1,"message":"110","line":6,"column":21,"nodeType":"95","messageId":"96","endLine":6,"endColumn":32},{"ruleId":"93","severity":1,"message":"111","line":6,"column":34,"nodeType":"95","messageId":"96","endLine":6,"endColumn":50},{"ruleId":"93","severity":1,"message":"112","line":6,"column":52,"nodeType":"95","messageId":"96","endLine":6,"endColumn":61},"no-unused-vars","'useNavigate' is defined but never used.","Identifier","unusedVar","'editUsersItem' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'toast' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'showClickedItem.user_id'. Either include it or remove the dependency array.","ArrayExpression",["113"],"'Navigate' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'closeModal'. Either include it or remove the dependency array.",["114"],"'description' is assigned a value but never used.","'original_pricing' is assigned a value but never used.","'condition' is assigned a value but never used.",{"desc":"115","fix":"116"},{"desc":"117","fix":"118"},"Update the dependencies array to be: [showClickedItem.user_id]",{"range":"119","text":"120"},"Update the dependencies array to be: [closeModal]",{"range":"121","text":"122"},[826,828],"[showClickedItem.user_id]",[332,334],"[closeModal]"]